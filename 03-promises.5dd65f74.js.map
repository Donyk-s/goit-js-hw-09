{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAChCI,EAAmBL,SAASC,cAAc,yBAQrB,SAAlBK,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAjBPQ,QAAQC,IAAIlB,GAIZiB,QAAQC,IAAIZ,GAoBkBA,EAAba,iBAAiB,SAAS,SAAAC,GACzCA,EAAEC,iBAEsB,IAApBC,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOnB,EAAKoB,OACNP,QAAdC,IAAIO,GAEmB,IAA1B,IAAIC,EAAI,EAAGA,EAAIrB,EAAOmB,MAAOE,GAAK,EAEqBnB,EAA5C,EAAImB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALZ,MAEjBc,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAU2B,EAAKP,EAALZ,MAElBc,EAAAhC,GAASiC,OAAOK,QACd,sBAAuCH,OAAfzB,EAAS,QAAYyB,OAANE,EAAM,M,IAKrDnC,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// пошук елементів\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\nconsole.log(form);\n// console.log(delay);\n// console.log(step);\n// console.log(amount);\nconsole.log(btnCreatePromise);\n\n// функція для створення обіцянки\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n// додавання слухача події для кнопки\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault(); // відміна оновлення сторінки\n\n  let firstDelay = Number(delay.value); // конвертація затримки в ЧИСЛО\n  let delayStep = Number(step.value); // конвертація кроку в ЧИСЛО\n  console.log(delayStep);\n  // цикл для перебору кількості введень\n  for (let i = 0; i < amount.value; i += 1) {\n    // Передача: номера промісу, першу затримку, введену користувачем, і крок.\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        // відображення повідомленя-успіху користувачеві з бібліотеки Notiflix\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // відображення повідомленя-помилки користувачеві з бібліотеки Notiflix\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  form.reset(); // очищення поля форми\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btnCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","console","log","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","reset"],"version":3,"file":"03-promises.5dd65f74.js.map"}