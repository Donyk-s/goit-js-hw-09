{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,iBAAkBL,SAASC,cAAc,0BAShB,SAAlBK,EAAcC,EAAUL,GAa/B,OAZgB,IAAIM,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAbPY,QAAQC,IAAIjB,EAAKO,kBAoBaP,EAAzBO,iBAAiBW,iBAAiB,SAAS,SAAAC,GAC9CA,EAAEC,iBAEsB,IAApBC,EAAaC,OAAOtB,EAAKI,MAAMmB,OAC/BC,EAAYF,OAAOtB,EAAKK,KAAKkB,OACXP,QAAdC,IAAIO,GAEmB,IAA1B,IAAIC,EAAI,EAAGA,EAAIzB,EAAKM,OAAOiB,MAAOE,GAAK,EAEgBjB,EAA5C,EAAIiB,EAAGJ,EAAaI,EAAID,GACnCE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MAEjBwB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MAElBwB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAuCF,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAKrDH,KAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnCreatePromise: document.querySelector('button[type=\"submit\"]'),\n};\n// console.log(form);\n// console.log(delay);\n// console.log(step);\n// console.log(amount);\nconsole.log(refs.btnCreatePromise);\n\n// функція для створення обіцянки\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n// додавання слухача події для кнопки\nrefs.btnCreatePromise.addEventListener('click', e => {\n  e.preventDefault(); // відміна оновлення сторінки\n\n  let firstDelay = Number(refs.delay.value); // конвертація затримки в ЧИСЛО\n  let delayStep = Number(refs.step.value); // конвертація кроку в ЧИСЛО\n  console.log(delayStep);\n  // цикл для перебору кількості введень\n  for (let i = 0; i < refs.amount.value; i += 1) {\n    // Передача: номера промісу, першу затримку, введену користувачем, і крок.\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        // відображення повідомленя-успіху користувачеві з бібліотеки Notiflix\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // відображення повідомленя-помилки користувачеві з бібліотеки Notiflix\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  form.reset(); // очищення поля форми\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btnCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.9b7e2ff0.js.map"}